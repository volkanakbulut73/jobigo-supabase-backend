index.ts
/* AUTOGENERATED BACKEND HANDLER FOR JOBIGO MVP */

import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import * as kv from "./kv_store.ts";

// Health check endpoint
serve(async (req) => {
  const { pathname } = new URL(req.url);

  try {
    if (pathname === "/") {
      return new Response("âœ… Jobigo Supabase Function Active", { status: 200 });
    }

    // Connectivity test
    if (pathname === "/ping") {
      return new Response(JSON.stringify({ ok: true, time: new Date().toISOString() }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    // Get a value
    if (pathname === "/get" && req.method === "POST") {
      const { key } = await req.json();
      const value = await kv.get(key);
      return new Response(JSON.stringify(value ?? {}), {
        headers: { "Content-Type": "application/json" },
      });
    }

    // Set a value
    if (pathname === "/set" && req.method === "POST") {
      const { key, value } = await req.json();
      await kv.set(key, value);
      return new Response(JSON.stringify({ success: true }), {
        headers: { "Content-Type": "application/json" },
      });
    }

    return new Response("Not found", { status: 404 });
  } catch (error) {
    console.error(error);
    return new Response(JSON.stringify({ error: error.message }), {
      headers: { "Content-Type": "application/json" },
      status: 500,
    });
  }
});
